{
    "openapi": "3.0.1",
    "info": {
        "title": "Social App Backend",
        "description": "Api Ui for Social App",
        "termsOfService": "http://socialapp/terms/",
        "contact": {
            "email": "kumarritesh14062000@gmail.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://spdx.org/licenses/MIT.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://social-media-app1-backend.herokuapp.com/"
        },
        {
            "url": "http://localhost:8080/"
        },
        {
            "url": "https://localhost:8080/"
        }
    ],
    "tags": [
        {
            "name": "Ping",
            "description": "Check Connection"
        },
        {
            "name": "Authentication",
            "description": "User authentication"
        },
        {
            "name": "Users",
            "description": "Operations about user"
        },
        {
            "name": "Friends",
            "description": "Operations about friend Request"
        },
        {
            "name": "Post",
            "description": "Operations about User Posts"
        },
        {
            "name": "Comment",
            "description": "Operations about Comment on User Posts"
        },
        {
            "name": "Notification",
            "description": "Operations about Notification"
        },
        {
            "name": "Analytics",
            "description": "Operations about Post Analytics"
        }
    ],
    "paths": {
        "/ping": {
            "get": {
                "tags": [
                    "Ping"
                ],
                "summary": "Check Connection",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Connected"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login here",
                "description": "Login for existing users",
                "parameters": [],
                "requestBody": {
                    "description": "Login Info",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "Ritesh"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "12345"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Signed in Successfully",
                        "content": {
                            " application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "User Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register here",
                "description": "Create new user in system",
                "parameters": [],
                "requestBody": {
                    "description": "user Info",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "lucifer"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "abc@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Azw@47"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Signed in Successfully",
                        "schema": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "User Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/forgotpassword": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send Reset Password Link to Email",
                "description": "Reset Password",
                "parameters": [],
                "requestBody": {
                    "description": "Email of the User",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "kumar@gmail.com"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password Reset Link Sent"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/auth/setnewpassword": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Set New Password",
                "description": "Set the New Password",
                "parameters": [],
                "requestBody": {
                    "description": "New Password and token",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "kumar@gmail.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "dsfajnkfafn2j43e3"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password Updated"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Try again token/session expired"
                    },
                    "500": {
                        "description": "Internal Server Error. Password Not updated"
                    }
                }
            }
        },
        "/auth/verifyemail": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Email",
                "description": "Verify the email",
                "parameters": [],
                "requestBody": {
                    "description": "Token sent in mail",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "dsfajnkfafn2j43e3"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email Verified"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "422": {
                        "description": "Try again token/session expired"
                    },
                    "500": {
                        "description": "Internal Server Error. Email Not Verified"
                    }
                }
            }
        },
        "/user/search": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Search the user with Given keyWords",
                "description": "KeyWord or username to be searched is matched with name and email of the user",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "KeyWord or username to be searched",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "query": {
                                        "type": "string",
                                        "example": "lucifer"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "User Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/{Id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get the user with Given Ids",
                "description": "Enter the user id",
                "parameters": [
                    {
                        "name": "Id",
                        "in": "path",
                        "description": "ID of user that needs to be fetched",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "hexadecimal"
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User Exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "User Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/profileimg": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Upload User Profile Image",
                "description": "ProfileImage",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "KeyWord or username to be searched",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "imgType": {
                                        "type": "string",
                                        "example": "Profile"
                                    },
                                    "imageFile": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile Image uploaded SuccesFully"
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/friend/create": {
            "post": {
                "tags": [
                    "Friends"
                ],
                "summary": "Send Friend Request to a User",
                "description": "Create a friend request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "Receiver Id",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiver ": {
                                        "type": "string",
                                        "example": "61d3f46801433d8e15804c6a",
                                        "description": "UserId of receiver"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend request sent SuccesFully"
                    },
                    "400": {
                        "description": " Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/friend/accept": {
            "put": {
                "tags": [
                    "Friends"
                ],
                "summary": "Accept Friend Request to a User",
                "description": "Accept friend request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "Receiver Id",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiver ": {
                                        "type": "string",
                                        "example": "61d3f46801433d8e15804c6a",
                                        "description": "UserId of receiver"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend Request Status Updated Succesfully"
                    },
                    "400": {
                        "description": " Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "No such Friend Exist"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/friend/reject": {
            "delete": {
                "tags": [
                    "Friends"
                ],
                "summary": "Reject Friend Request to a User",
                "description": "Reject friend request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "User Id of user whose request to be rejected",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiver ": {
                                        "type": "string",
                                        "example": "61d3f46801433d8e15804c6a",
                                        "description": "UserId of receiver"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friend Request Rejected Succesfully"
                    },
                    "400": {
                        "description": " Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "No such Friend Exist"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/friend/block": {
            "post": {
                "tags": [
                    "Friends"
                ],
                "summary": "Block / Unblock a User",
                "description": "Block /Unblock a friend request",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "User Id of user whose request to be blocked or Unblocked ",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "receiver ": {
                                        "type": "string",
                                        "example": "61d3f46801433d8e15804c6a",
                                        "description": "UserId of user to be blocked or Unblocked"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User Blocked/Unblocked Succesfully"
                    },
                    "400": {
                        "description": " Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "No such Friend Exist"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/friend/list/:status": {
            "get": {
                "tags": [
                    "Friends"
                ],
                "summary": "Block / Unblock a User",
                "description": "Block /Unblock a friend request",
                "parameters": [
                    {
                        "name": "Status",
                        "in": "path",
                        "description": "Status of Request to be fetched . Status states:\n  1 : `Requested`\n  2 : `Pending`\n  3 : `Blocked`\n  4 : `Accepted`\n",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "enum": [
                                "1",
                                "2",
                                "3",
                                "4"
                            ],
                            "description": "Status states:\n  1 : `Requested`\n  2 : `Pending`\n  3 : `Blocked`\n  4 : `Accepted`\n"
                        }
                    },
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User list with Given Status "
                    },
                    "400": {
                        "description": " Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/friend/recommendation": {
            "get": {
                "tags": [
                    "Friends"
                ],
                "summary": "Recommends Mutual Friend",
                "description": "",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ids of Mutual Friends"
                    },
                    "400": {
                        "description": " Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": ""
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/post/create": {
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create Post",
                "description": "Create a post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "Details of Post to be created",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "caption": {
                                        "type": "string",
                                        "example": "Nice morning"
                                    },
                                    "tags": {
                                        "type": "string",
                                        "example": "love,goodvibes"
                                    },
                                    "image": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Select Image for Post  otherwise leave empty"
                                    },
                                    "taggedPerson": {
                                        "type": "string",
                                        "example": "ObjectId,ObjectId,61fe7fa426d710ddf9bf6fea"
                                    },
                                    "originalAuthor": {
                                        "type": "string",
                                        "example": "61fe7fa426d710ddf9bf6fea",
                                        "description": "UserId of Author if Post is Shared otherwise leave empty"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post Created SuccesFully",
                        "content": {
                            " application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/post/update": {
            "patch": {
                "tags": [
                    "Post"
                ],
                "summary": "Update Post",
                "description": "Update a post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "Details of Post to be updated",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "postId": {
                                        "type": "string",
                                        "example": "61fe7fa426d710ddf9bf6fea",
                                        "description": "Id of post to be Updated"
                                    },
                                    "caption": {
                                        "type": "string",
                                        "example": "Nice morning"
                                    },
                                    "tags": {
                                        "type": "string",
                                        "example": "love,goodvibes"
                                    },
                                    "taggedPerson": {
                                        "type": "string",
                                        "example": "ObjectId,ObjectId,61fe7fa426d710ddf9bf6fea"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post Updated SuccesFully",
                        "content": {
                            " application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/post/delete": {
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete Post",
                "description": "Delete a post",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    }
                ],
                "requestBody": {
                    "description": "Id of Post to be deleted",
                    "required": true,
                    "content": {
                        " application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "postId": {
                                        "type": "string",
                                        "example": "61fe7fa426d710ddf9bf6fea",
                                        "description": "Id of post to be Deleted"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post Deleted SuccesFully"
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/post/mine": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Fetch all the Post of Logged in User",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The Page number of the result set to collect"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The numbers of items to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "User Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/post/feed": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get Posts for the Feed",
                "description": "Fetch all the latest post of friends",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The Page number of the result set to collect"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The numbers of items to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Posts Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "User Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/post/other": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get all Post of a user of given Id",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The Page number of the result set to collect"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The numbers of items to return"
                    }
                ],
                "requestBody": {
                    "description": "UserId whose Post to be Fetched",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "userId": {
                                        "type": "string",
                                        "example": "61fe7fa426d710ddf9bf6fea"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "User Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/post/extended": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get Post suggestion based on the tags of most liked/created Post",
                "description": "KeyWord or username to be searched is matched with name and email of the user",
                "parameters": [
                    {
                        "in": "header",
                        "name": "x-access-token",
                        "schema": {
                            "type": "string"
                        },
                        "required": "true"
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The Page number of the result set to collect"
                    },
                    {
                        "in": "query",
                        "name": "size",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "The numbers of items to return"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID / Bad Request"
                    },
                    "422": {
                        "description": "Unprocessable entity"
                    },
                    "404": {
                        "description": "User Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/post/:id": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get A Post by PostId",
                "description": ""
            }
        },
        "/user/post/like": {
            "put": {
                "tags": [
                    "Post"
                ],
                "summary": "Like Unlike a Post",
                "description": ""
            }
        },
        "/user/post/comment/:postId": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Create Comment",
                "description": ""
            }
        },
        "/user/post/reply/:postId": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "create Reply",
                "description": ""
            }
        },
        "/user/post/comment/likeunlike": {
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Like Unlike a Comment",
                "description": ""
            }
        },
        "/user/post/comment/delete/:commentId": {
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a Comment",
                "description": ""
            }
        },
        "/user/post/updatecomment/:commentId": {
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update a Comment",
                "description": ""
            }
        },
        "/user/post/reply/:parentId": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Reply to a Comment",
                "description": ""
            }
        },
        "/user/post/comment/": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get all Comment",
                "description": ""
            }
        },
        "/user/notification": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get all Notification",
                "description": ""
            }
        },
        "/user/notification/read": {
            "put": {
                "tags": [
                    "Notification"
                ],
                "summary": "Mark as read all Notification",
                "description": ""
            }
        },
        "/user/notification/read/:notificationid": {
            "put": {
                "tags": [
                    "Notification"
                ],
                "summary": "Mark as read a Notification",
                "description": ""
            }
        },
        "/user/notification/:id": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get Details of Notification By Id",
                "description": ""
            }
        },
        "/user/post/engagement": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get Account Engagement rate",
                "description": ""
            }
        },
        "/user/post/mostliked": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get Most Liked Post",
                "description": ""
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "required": [
                    "id",
                    "username",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    },
                    "city": {
                        "type": "string"
                    },
                    "isVerfified": {
                        "type": "boolean",
                        "default": "false"
                    },
                    "pic": {
                        "type": "string"
                    },
                    "resetToken": {
                        "type": "string"
                    },
                    "expireToken": {
                        "type": "string",
                        "format": "date"
                    }
                },
                "xml": {
                    "name": "User"
                }
            },
            "Post": {
                "type": "object",
                "required": [
                    "caption"
                ],
                "properties": {
                    "caption": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    },
                    "pic": {
                        "type": "string",
                        "description": "Url of Picture"
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "taggedPerson": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "postedBy": {
                        "type": "string",
                        "description": "ObjectId"
                    },
                    "shared": {
                        "type": "boolean",
                        "description": "ObjectId",
                        "default": "false"
                    },
                    "sharedBy": {
                        "type": "string",
                        "description": "ObjectId",
                        "nullable": "true"
                    },
                    "visibility": {
                        "type": "boolean",
                        "default": "true"
                    }
                },
                "xml": {
                    "name": "FriendRequests"
                }
            },
            "Comment": {
                "type": "object",
                "required": [
                    "body"
                ],
                "properties": {
                    "postId": {
                        "type": "string",
                        "description": "ObjectId"
                    },
                    "body": {
                        "type": "string"
                    },
                    "commentedBy": {
                        "type": "string",
                        "description": "ObjectId"
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "parentId": {
                        "type": "string",
                        "description": "ObjectId",
                        "nullable": "true"
                    }
                },
                "xml": {
                    "name": "FriendRequests"
                }
            },
            "FriendRequests": {
                "type": "object",
                "required": [
                    "senderId",
                    "likes"
                ],
                "properties": {
                    "senderId": {
                        "type": "string"
                    },
                    "receiverId": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4"
                        ],
                        "description": "Status states:\n  1 : `Requested`\n  2 : `Pending`\n  3 : `Blocked`\n  4 : `Accepted`\n"
                    }
                },
                "xml": {
                    "name": "FriendRequests"
                }
            },
            "Tags": {
                "type": "object",
                "properties": {
                    "tag": {
                        "type": "string"
                    },
                    "Number": {
                        "type": "Number",
                        "default": "0"
                    },
                    "userid": {
                        "type": "string",
                        "description": "ObjectId"
                    }
                },
                "xml": {
                    "name": "Tags"
                }
            },
            "Notification": {
                "type": "object",
                "required": [
                    "senderId",
                    "receiverId"
                ],
                "properties": {
                    "senderId": {
                        "type": "string"
                    },
                    "receiverId": {
                        "type": "string"
                    },
                    "event": {
                        "type": "integer",
                        "enum": [
                            "1",
                            "2",
                            "3",
                            "4",
                            "5"
                        ],
                        "description": "Event:\n  1 : `Liked Post`\n  2 : `Liked Comment`\n  3 : `Commented on Post `\n  4 : `Sent Friend Request`\n  4 : `Accepted Friend Request`\n"
                    },
                    "postid": {
                        "type": "string",
                        "description": "ObjectId"
                    },
                    "commentid": {
                        "type": "string",
                        "description": "ObjectId"
                    },
                    "seen": {
                        "type": "boolean",
                        "default": "false"
                    }
                },
                "xml": {
                    "name": "FriendRequests"
                }
            },
            "ApiResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        }
    }
}